package ast.visitor;

import ast.declaracion.DeclaracionFuncion;
import ast.declaracion.DeclaracionStruct;
import ast.declaracion.DeclaracionVariable;

public class MemoryVisitor {

	private int siguienteLibre = 0;
	private int parametrosBP = 4;
	private int localesBP = 0;

	public Object visit(DeclaracionVariable variableGlobal) {
		variableGlobal.setDireccion(siguienteLibre);
		siguienteLibre += variableGlobal.getTipo().size();
		return null;
	}

	public Object visit(DeclaracionStruct structGlobal) {
		structGlobal.setDireccion(siguienteLibre);
		siguienteLibre += structGlobal.size();
		return null;
	}

	public Object visit(DeclaracionFuncion funcion) {
		for (int i = funcion.getParametros().size(); i >= 0; i--) {
			funcion.getParametros().get(i).setDireccion(parametrosBP);
			parametrosBP += funcion.getParametros().get(i).getTipo().size();
		}

		return null;
	}

}
